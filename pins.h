////////////////////////////////////////////////////////////////////////
// DO NOT EDIT THIS FILE
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// PIN DEFINITIONS

////////////////////////////////////////////////////////////////////////
// Manual control input pins
#if defined(BOARD_ESP32)
  const int MC_throttle_pin = 15; // Throttle pin (analog & digital)
  const int MC_reverse_pin = 2; // Reverse Enable (digital)
  const int MC_cruiseControl_pin = 0; // Cruise Control Enable (digital)
  const int MC_brake_pin = 16; // Brake (digital)
  const int MC_horn_pin = 17; // Horn (digital)
  const int MC_indicL_pin = 5; // Indicator1 (digital)
  const int MC_indicR_pin = 18; // Indicator2 (digital)
  const int MC_head_pin = 19; // Headlights (digital)
  const int MC_hazard_pin = 21; // Hazard lights
  const int MC_other1_pin = 22; // Other (analog)
#elif defined(BOARD_MAPLEMINI)
  const int NOT_A_PIN = -1;
  const int MC_throttle_pin = PB0; // Forward (analog & digital)
  const int MC_reverse_pin = PC13; // Reverse Enable OR Reverse (analog)
  const int MC_cruiseControl_pin = PA8; // Cruise Control Enable (digital)
  const int MC_brake_pin = PC14; // Brake (digital)
  const int MC_horn_pin = PB5; // Horn (digital)
  const int MC_indicL_pin = PB4; // Indicator1 (digital)
  const int MC_indicR_pin = PB3; // Indicator2 (digital)
  const int MC_head_pin = PA15; // Headlights (digital)
  const int MC_hazard_pin = PA14; // Hazard lights
  const int MC_other1_pin = PA0; // Other (analog)
#elif defined(BOARD_BLACKPILL)
  const int NOT_A_PIN = -1;
  const int MC_throttle_pin = PB0; // Forward (analog & digital)
  const int MC_reverse_pin = PA6; // Reverse Enable OR Reverse (analog)
  const int MC_cruiseControl_pin = PA8; // Cruise Control Enable (digital)
  const int MC_brake_pin = PC14; // Brake (digital)
  const int MC_horn_pin = PB5; // Horn (digital)
  const int MC_indicL_pin = PB4; // Indicator1 (digital)
  const int MC_indicR_pin = PB3; // Indicator2 (digital)
  const int MC_head_pin = PA15; // Headlights (digital)
  const int MC_hazard_pin = PA14; // Hazard lights
  const int MC_other1_pin = PA0; // Other (analog)
#endif
////////////////////////////////////////////////////////////////////////
// PWM PINS FOR MOTOR CONTROLLERS
#if defined(MOT_SPARK) && defined(BOARD_ESP32)
  const int mot_pwm1_pin = 34; // pin1
  const int mot_pwm2_pin = 35; // pin2
  const int mot_pwm3_pin = 32; // pin2
  const int mot_pwm4_pin = 33; // pin2
#elif defined(MOT_SPARK) && defined(BOARD_MAPLEMINI)
  const int mot_pwm1_pin = PC15; // pin1
  const int mot_pwm2_pin = PA1; // pin2
  const int mot_pwm3_pin = PA2; // pin2
  const int mot_pwm4_pin = PA3; // pin2
#elif defined(MOT_SPARK) && defined(BOARD_BLACKPILL)
  const int mot_pwm1_pin = PC15; // pin1
  const int mot_pwm2_pin = PA1; // pin2
  const int mot_pwm3_pin = PA2; // pin2
  const int mot_pwm4_pin = PA3; // pin2
#endif

////////////////////////////////////////////////////////////////////////
// INHIBIT PIN -> low equals no drive
#if defined(BOARD_ESP32)
  int inhibit_pin = 23;
#elif defined(BOARD_MAPLEMINI)
  int inhibit_pin = PB1;
#elif defined(BOARD_BLACKPILL)
  int inhibit_pin = PB1;
#endif
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// BATTERY AND CURRENT
#if defined(BOARD_ESP32)
  int batteryVoltage_pin = A0;
#elif defined(BOARD_MAPLEMINI)
  int batteryVoltage_pin = PA0;
#elif defined(BOARD_BLACKPILL)
  int batteryVoltage_pin = PA0;
#endif
////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////
// OTHER PERIPHERALS OUTPUT
int headLight_pin = NOT_A_PIN;
int indicLightL_pin = NOT_A_PIN;
int indicLightR_pin = 13;
int brakeLight_pin = NOT_A_PIN;
int errorLed_pin = NOT_A_PIN;
////////////////////////////////////////////////////////////////////////
